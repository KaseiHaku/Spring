plugins {
    id 'java'
    id 'application'
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
    id "io.freefair.lombok" version "4.1.6"
    id 'idea'
}

group 'kasei'
version '1.0.0'

sourceCompatibility = JavaVersion.VERSION_11

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    mavenCentral()
    jcenter()
}

configurations {
    
    compile.exclude  group: 'commons-logging', module: 'commons-logging'  // 排除掉 JCL 
    testCompile.exclude group: 'org.junit.vintage'  // 排除掉 Junit5 兼容 Junit4 的 jar 包
    testCompile.exclude group: 'junit'  // 排除掉 Junit4 的 jar 包
}


/** TODO 依赖于 java 插件 ********************************************************************/
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude 'kasei/spring/transaction/**'
        }
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

/** TODO 表明用于编译的 .java 文件的编码格式是 UTF-8 */
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

/** TODO 插件 io.spring.dependency-management 的 DSL
 * 依赖管理配置：可以让 dependencies {} 中省略版本号 
 * */
dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Cairo-SR8'  // 不能使用 group, name, version 的形式
    }
}



dependencies {

    /** todo Gradle 支持的依赖方式
     * compileOnly — for dependencies that are necessary to compile your production code but shouldn’t be part of the runtime classpath
     * implementation (supersedes compile) — used for compilation and runtime
     * runtimeOnly (supersedes runtime) — only used at runtime, not for compilation
     * testCompileOnly — same as compileOnly except it’s for the tests
     * testImplementation — test equivalent of implementation
     * testRuntimeOnly — test equivalent of runtimeOnly
     * */

    /** TODO Convenient Develop */
    // 自动生成 getter setter，而不用写在代码里，需要 IDEA 安装 lombok 插件，并修改 "Settings > Build > Compiler > Annotation Processors" 为 Enable
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    /** TODO Test */
    testImplementation group: 'org.springframework', name: 'spring-test'
    testImplementation group: 'org.springframework', name: 'spring-mock', version: '2.0.8'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'

    /** TODO Utility */
    implementation group: 'org.apache.commons', name: 'commons-lang3'

    /** TODO Spring */
    implementation group: 'org.springframework', name: 'spring-core'        // 包含动态代理等通用工具类

    /** TODO IOC & DI */
    implementation group: 'org.springframework', name: 'spring-beans'       // 包含 Bean 工厂，数据绑定器，类型转换器
    implementation group: 'org.springframework', name: 'spring-context'     // 包含 上下文容器，定时任务，异步任务

    /** TODO Validate  */
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator'
    implementation group: 'javax.el', name: 'javax.el-api'
    implementation group: 'org.glassfish', name: 'javax.el'


    /** TODO AOP */
    implementation group: 'org.springframework', name: 'spring-aop'         // AOP 编程模式所依赖的包
    implementation group: 'org.springframework', name: 'spring-aspects'     // Spring 使用 Aspectj 进行 AOP 实现时，所依赖的包
    implementation group: 'aopalliance', name: 'aopalliance', version: '1.0'
    implementation group: 'org.aspectj', name: 'aspectjrt'
    runtimeOnly group: 'org.aspectj', name: 'aspectjweaver'








    /** TODO JDBC */
    implementation group: 'org.springframework', name: 'spring-jdbc'        // Spring 连接关系型数据库必须的包
    implementation group: 'org.springframework', name: 'spring-tx'          // Spring 事务管理所依赖的包
    implementation group: 'com.zaxxer', name: 'HikariCP'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

    /** TODO Log */
    // Apache Commons Logging(JCL) 是 apache 提供的通用日志 API，和 SLF4J 类似，
    // JCL 如果没有找到第三方日志实现，则默认使用 JDK 自带的日志实现 java.util.logging(JUL)，
    // JCL 不能适配最新的 log4j2 和 logback 的实现
    implementation group: 'org.slf4j', name: 'slf4j-api'
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j'   // 将 JCL 适配到 SLF4J 上，引入这个依赖要排除掉 commons-logging 依赖
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl'  // 将 slf4j 适配到 log4j2 上
    

    /** TODO Mail */
    implementation group: 'org.springframework.integration', name: 'spring-integration-mail' // Spring Mail
    implementation group: 'com.sun.mail', name: 'javax.mail'

    /** TODO Template Engine */
    implementation group: 'org.freemarker', name: 'freemarker'

    /** TODO Web HTTP Client */
    implementation group: 'org.springframework', name: 'spring-web'
    implementation group: 'org.springframework', name: 'spring-webflux'
    implementation group: 'io.projectreactor.netty', name: 'reactor-netty', version: '0.9.4.RELEASE'
    

}

/** TODO 依赖于 application 插件 ********************************************************************/
mainClassName = 'kasei.spring.SpringMain'
application {
    applicationDefaultJvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=43567']
}


test {
    testLogging {
        // shell> gradle --debug test --tests kasei.spring.SpringTests.testMethod | grep 'TestEventLogger'
        events 'STARTED', 'PASSED', 'SKIPPED', 'FAILED', 'STANDARD_OUT', 'STANDARD_ERROR'
    }

    useJUnitPlatform {
        systemProperties = [
                'junit.platform.output.capture.stdout': 'true',
                'junit.platform.output.capture.stderr': 'true'
        ]
    }
}

