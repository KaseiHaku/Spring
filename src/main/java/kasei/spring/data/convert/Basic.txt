

java.beans.PropertyEditor
    作用： 将 String 转换成指定的类型的 Object

    应用场景：
        1. Spring 将 xml 里面配置的 String 类型值 转换成 实际需要的类型的实例，例如：kasei.spring.Go 字符串 转换成 内存中实际的 Class 实例
        2. MVC 中将 HTTP request parameters 转换成 Controller 类对应的方法参数

    注册方式：
        1. sun.bean.editors: 包含 Font, Color, Enum, 基本类型 的 PropertyEditor 实现类
        2. 同包下，以 Editor 结尾的类名，会被当作 PropertyEditor 搜索，例如 SomethingEditor 会被当作同包下的 Something 类的 editor 被注册
        3. 同包下，以 BeanInfo 结尾的类名，会被调用，以注册一个或多个 PropertyEditor
        4. Spring 默认提供的 PropertyEditor 都在 org.springframework.beans.propertyeditors 包下，由 BeanWrapperImpl 注册
        5. 手动注册：
            1. 如果能获取到 Spring ConfigurableBeanFactory 的引用，那么可以调用 registerCustomEditor() 进行注册
            2. 调用 CustomEditorConfigurer 类的 setCustomEditors() 方法，因为该类实现了 BeanFactoryPostProcessor 所以 Spring 会在自动调用
            3. PropertyEditorRegistrar 这个接口被 BeanWrapper 和 DataBinder 实现


java.beans.PropertyEditorManager
    作用： 用于配置 PropertyEditor 实现类的查找路径，

Converter: 标记当前类是个转换器
GenericConverter:
ConditionalConverter: 标记当前 Converter 有个方法用于判断参数中的 Type 是否可以由当前 Converter 进行转换
ConversionService:
ConverterRegistry:

Formatter: 更具体化的表示 打印和解析的过程

