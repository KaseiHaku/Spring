<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		    http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 
	xmlns(XML Namespace)
	xmlns:xsi(表示使用xsi作为前缀的Namespace，当然前缀xsi需要在文档中声明。)
	xsi:schemaLocation(它定义了XML Namespace和对应的 XSD（Xml Schema Definition）文档的位置的关系。
						它的值由一个或多个URI引用对组成，两个URI之间以空白符分隔（空格和换行均可）。
						第一个URI是定义的 XML Namespace的值，第二个URI给出Schema文档的位置，)
	 -->            
    <!-- 什么是JavaBean
    	1.JavaBean 类必须是一个公共类，即 类的访问权限为  public
    	2.类变量都为 private 类，且变量名第二个字母最好不要大写，如：hFilename等
    	3.JavaBean 类必须有一个不带参数的构造函数：此构造函数也应该通过调用各个特性的设置方法来设置特性的缺省值
    	4.必须具有一组存取方法（getXxx 和 setXxx）来访问：即，对于每个类变量，应该有一个带匹配公共 getter 和 setter 方法的专用实例变量
    	
    	Spring 基本术语
    	IOC:Inversion of Control，控制倒转
    	DI:Dependency Injection，依赖注入
    	AOP:Aspect-OrientedProgramming面向切面编程
    	
    	Spring 整体架构：
    	1、数据库   Web 等整合
    	2、AOP  Aspects  Instrumentation  Messaging
    	3、Spring Core Container:Beans  Core   Context   SpEL（最底层）
    	
    	Spring 基本运行原理：
    	1、创建一个 IOC 容器对象：
    		ApplicationContext ioc = new ClassPathXmlApplicationContext("applicationContext.xml");
    		其中 applicationContext.xml 是指定的 spring 配置文件名
    	2、从 IOC 容器中获取 bean 对象：ioc.getBean("beanId");
    	3、使用获取的对象
     -->  
     	         
</beans>